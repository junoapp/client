[{"/Users/paulomenezes/repositories/juno/client/src/index.tsx":"1","/Users/paulomenezes/repositories/juno/client/src/App.tsx":"2","/Users/paulomenezes/repositories/juno/client/src/pages/Dashboard.tsx":"3","/Users/paulomenezes/repositories/juno/client/src/pages/DatasetColumns.tsx":"4","/Users/paulomenezes/repositories/juno/client/src/pages/Home.tsx":"5","/Users/paulomenezes/repositories/juno/client/src/services/dataset.service.ts":"6","/Users/paulomenezes/repositories/juno/client/src/charts/HorizontalBarChart.tsx":"7","/Users/paulomenezes/repositories/juno/client/src/charts/VerticalBarChart.tsx":"8","/Users/paulomenezes/repositories/juno/client/src/charts/LineChart.tsx":"9","/Users/paulomenezes/repositories/juno/client/src/components/UploadFileForm.tsx":"10","/Users/paulomenezes/repositories/juno/client/src/components/DatasetsList.tsx":"11","/Users/paulomenezes/repositories/juno/client/src/components/form/Input.tsx":"12","/Users/paulomenezes/repositories/juno/client/src/components/form/Select.tsx":"13","/Users/paulomenezes/repositories/juno/client/src/components/DatabaseConnectionForm.tsx":"14","/Users/paulomenezes/repositories/juno/client/src/components/ui/Card.tsx":"15","/Users/paulomenezes/repositories/juno/client/src/hooks/useButtonGroup.tsx":"16","/Users/paulomenezes/repositories/juno/client/src/components/ui/Loading.tsx":"17","/Users/paulomenezes/repositories/juno/client/src/utils/functions.ts":"18","/Users/paulomenezes/repositories/juno/client/src/components/ui/Alert.tsx":"19","/Users/paulomenezes/repositories/juno/client/src/components/ui/Badge.tsx":"20","/Users/paulomenezes/repositories/juno/client/src/pages/UserAdd.tsx":"21","/Users/paulomenezes/repositories/juno/client/src/services/user.service.ts":"22","/Users/paulomenezes/repositories/juno/client/src/components/UsersList.tsx":"23","/Users/paulomenezes/repositories/juno/client/src/pages/UserView.tsx":"24","/Users/paulomenezes/repositories/juno/client/src/contexts/user.context.tsx":"25","/Users/paulomenezes/repositories/juno/client/src/components/DashboardList.tsx":"26","/Users/paulomenezes/repositories/juno/client/src/services/dashboard.service.ts":"27","/Users/paulomenezes/repositories/juno/client/src/services/dashboard-recommendation.service.ts":"28","/Users/paulomenezes/repositories/juno/client/src/charts/StackedHorizontalBarChart.tsx":"29","/Users/paulomenezes/repositories/juno/client/src/charts/MultipleLineChart.tsx":"30","/Users/paulomenezes/repositories/juno/client/src/components/Header.tsx":"31","/Users/paulomenezes/repositories/juno/client/src/charts/Heatmap.tsx":"32"},{"size":340,"mtime":1611016852436,"results":"33","hashOfConfig":"34"},{"size":1880,"mtime":1611803151541,"results":"35","hashOfConfig":"34"},{"size":7407,"mtime":1611793866382,"results":"36","hashOfConfig":"34"},{"size":12850,"mtime":1611803389372,"results":"37","hashOfConfig":"34"},{"size":628,"mtime":1611803463484,"results":"38","hashOfConfig":"34"},{"size":1132,"mtime":1611020935835,"results":"39","hashOfConfig":"34"},{"size":2378,"mtime":1611542448505,"results":"40","hashOfConfig":"34"},{"size":3406,"mtime":1609701891160,"results":"41","hashOfConfig":"34"},{"size":2555,"mtime":1611613361502,"results":"42","hashOfConfig":"34"},{"size":1480,"mtime":1611107309021,"results":"43","hashOfConfig":"34"},{"size":3473,"mtime":1611019093343,"results":"44","hashOfConfig":"34"},{"size":638,"mtime":1608760494585,"results":"45","hashOfConfig":"34"},{"size":909,"mtime":1611802624239,"results":"46","hashOfConfig":"34"},{"size":2142,"mtime":1608760485535,"results":"47","hashOfConfig":"34"},{"size":549,"mtime":1608761828515,"results":"48","hashOfConfig":"34"},{"size":838,"mtime":1609702089939,"results":"49","hashOfConfig":"34"},{"size":352,"mtime":1608760505523,"results":"50","hashOfConfig":"34"},{"size":718,"mtime":1604534527400,"results":"51","hashOfConfig":"34"},{"size":740,"mtime":1608760544464,"results":"52","hashOfConfig":"34"},{"size":246,"mtime":1608760500474,"results":"53","hashOfConfig":"34"},{"size":2163,"mtime":1609981402090,"results":"54","hashOfConfig":"34"},{"size":627,"mtime":1609703822505,"results":"55","hashOfConfig":"34"},{"size":2585,"mtime":1611803192468,"results":"56","hashOfConfig":"34"},{"size":934,"mtime":1611105004308,"results":"57","hashOfConfig":"34"},{"size":694,"mtime":1611766718717,"results":"58","hashOfConfig":"34"},{"size":3490,"mtime":1611187400135,"results":"59","hashOfConfig":"34"},{"size":1351,"mtime":1611108165367,"results":"60","hashOfConfig":"34"},{"size":264,"mtime":1611616132875,"results":"61","hashOfConfig":"34"},{"size":3418,"mtime":1611582908504,"results":"62","hashOfConfig":"34"},{"size":3858,"mtime":1611602794453,"results":"63","hashOfConfig":"34"},{"size":677,"mtime":1611766727660,"results":"64","hashOfConfig":"34"},{"size":2583,"mtime":1611793778759,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1su9u6q",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"/Users/paulomenezes/repositories/juno/client/src/index.tsx",[],["136","137"],"/Users/paulomenezes/repositories/juno/client/src/App.tsx",[],"/Users/paulomenezes/repositories/juno/client/src/pages/Dashboard.tsx",[],"/Users/paulomenezes/repositories/juno/client/src/pages/DatasetColumns.tsx",[],"/Users/paulomenezes/repositories/juno/client/src/pages/Home.tsx",[],"/Users/paulomenezes/repositories/juno/client/src/services/dataset.service.ts",[],"/Users/paulomenezes/repositories/juno/client/src/charts/HorizontalBarChart.tsx",[],"/Users/paulomenezes/repositories/juno/client/src/charts/VerticalBarChart.tsx",[],"/Users/paulomenezes/repositories/juno/client/src/charts/LineChart.tsx",["138","139"],"import { useState, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { DatasetChartSpecValues } from '@junoapp/common';\n\nimport { generateId } from '../utils/functions';\n\nfunction elementId(svgId: string, id: string): string {\n  return `${svgId}-${id}`;\n}\n\nexport function LineChart(props: {\n  name: string;\n  data: Array<DatasetChartSpecValues>;\n  onPress: (data: DatasetChartSpecValues) => void;\n}): JSX.Element {\n  const [id] = useState<string>(generateId());\n\n  useEffect(() => {\n    const margin = {\n      top: 10,\n      bottom: 30,\n      left: 80,\n      right: 80,\n    };\n\n    const height = 400;\n\n    const svg = d3.select(`#${id}`).append('svg').attr('width', '100%').attr('height', height);\n    const width = svg.node()?.getBoundingClientRect().width;\n\n    const groupData = svg.append('g').attr('id', elementId(id, 'group-data'));\n    const groupAxis = svg.append('g').attr('id', elementId(id, 'group-axis'));\n\n    const xAcessor = (d: DatasetChartSpecValues) => new Date(d.name);\n    const yAcessor = (d: DatasetChartSpecValues) => d.value;\n\n    const valueMax = d3.max(props.data, yAcessor);\n\n    const extent = d3.extent(props.data, xAcessor);\n\n    const xScale = d3\n      .scaleTime()\n      .domain(extent)\n      .range([margin.left, width - margin.right]);\n\n    const yScale = d3\n      .scaleLinear()\n      .domain([0, valueMax])\n      .range([height - margin.bottom, margin.top]);\n\n    const xAxis = d3.axisBottom(xScale);\n    const yAxis = d3.axisLeft(yScale);\n\n    const lineGenerator = d3\n      .line<DatasetChartSpecValues>()\n      .defined((d) => !isNaN(d.value))\n      .x((d) => xScale(new Date(d.name)))\n      .y((d) => yScale(d.value));\n\n    const lineGenerator2 = d3\n      .line<DatasetChartSpecValues>()\n      .defined((d) => !isNaN(d.value))\n      .x((d) => xScale(new Date(d.name)))\n      .y((d) => yScale(d.value2));\n\n    groupData\n      .append('path')\n      .datum(props.data)\n      .attr('d', lineGenerator)\n      .attr('width', width)\n      .attr('height', height)\n      .attr('fill', 'none')\n      .attr('stroke', 'steelblue')\n      .attr('stroke-width', 1.5)\n      .attr('stroke-linejoin', 'round')\n      .attr('stroke-linecap', 'round');\n\n    groupAxis\n      .append('g')\n      .call(xAxis)\n      .attr('transform', `translate(0, ${height - margin.bottom})`);\n\n    groupAxis.append('g').call(yAxis).attr('transform', `translate(${margin.left}, 0)`);\n\n    return () => {\n      svg.remove();\n    };\n  }, [id, props]);\n\n  return (\n    <div>\n      <h1>{props.name}</h1>\n      <div id={id}></div>\n    </div>\n  );\n}\n","/Users/paulomenezes/repositories/juno/client/src/components/UploadFileForm.tsx",[],"/Users/paulomenezes/repositories/juno/client/src/components/DatasetsList.tsx",["140","141","142","143","144","145"],"import { useEffect, useState } from 'react';\nimport { formatRelative } from 'date-fns';\nimport { Link, useParams } from 'react-router-dom';\n\nimport { getAll, remove } from '../services/dataset.service';\nimport { DatasetInterface, DatasetColumnRole, DashboardInterface } from '@junoapp/common';\nimport { Alert } from './ui/Alert';\nimport { Loading } from './ui/Loading';\nimport { Card } from './ui/Card';\nimport { Badge } from './ui/Badge';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport function DatasetsList(): JSX.Element {\n  const [datasets, setDatasets] = useState<DatasetInterface[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const { id } = useParams<{ id: string }>();\n\n  const load = () => {\n    setIsLoading(true);\n\n    getAll().then((datasets) => {\n      setDatasets(datasets);\n      setIsLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    load();\n  }, []);\n\n  const countColumns = (dataset: DatasetInterface, type: DatasetColumnRole): React.ReactNode => {\n    const count = dataset.columns.filter((column) => column.role === type).length;\n\n    if (count > 0) {\n      return (\n        <Badge>\n          {count} {type.toLowerCase()} column{count > 1 ? 's' : ''}\n        </Badge>\n      );\n    }\n\n    return null;\n  };\n\n  const onDeleteHandler = async (id: number) => {\n    setIsLoading(true);\n    await remove(id);\n    load();\n  };\n\n  return (\n    <div className=\"relative flex flex-wrap -mx-4 min-h\">\n      <Loading loading={isLoading} />\n\n      {!isLoading && datasets.length === 0 && (\n        <Alert\n          title=\"No dataset loaded\"\n          message=\"Upload a CSV file or connect with a database.\"\n          className=\"mx-4\"\n        />\n      )}\n\n      {!isLoading &&\n        datasets.length > 0 &&\n        datasets.map((dataset: DatasetInterface) => (\n          <div key={dataset.id} className=\"w-1/3 px-4 mb-4\">\n            <Card title={dataset.originalname}>\n              <div className=\"flex flex-col items-start\">\n                <Badge>CSV</Badge>\n                {countColumns(dataset, DatasetColumnRole.MEASURE)}\n                {countColumns(dataset, DatasetColumnRole.DIMENSION)}\n                <span className=\"text-gray-600 text-xs mb-2\">\n                  Updated {formatRelative(new Date(dataset.updatedDate), new Date())}\n                  <br />\n                  Created {formatRelative(new Date(dataset.createdDate), new Date())}\n                </span>\n              </div>\n              <div className=\"flex\">\n                {/* <Link\n                  to={`/user/${id}/dashboards/${dataset.id}/view`}\n                  className=\"button button-primary button-small mr-2\"\n                >\n                  <FontAwesomeIcon icon=\"eye\" />\n                  View\n                </Link> */}\n                <Link\n                  to={`/dashboard/add/${dataset.id}`}\n                  className=\"button button-primary button-small mr-2\"\n                >\n                  <FontAwesomeIcon icon=\"pencil-alt\" className=\"mr-1\" />\n                  Create new dashboard\n                </Link>\n                {/* <button\n                  type=\"button\"\n                  className=\"button button-danger button-small\"\n                  onClick={() => onDeleteHandler(dataset.id)}\n                >\n                  <FontAwesomeIcon icon=\"trash\" />\n                  Delete\n                </button> */}\n              </div>\n            </Card>\n          </div>\n        ))}\n    </div>\n  );\n}\n","/Users/paulomenezes/repositories/juno/client/src/components/form/Input.tsx",[],"/Users/paulomenezes/repositories/juno/client/src/components/form/Select.tsx",[],"/Users/paulomenezes/repositories/juno/client/src/components/DatabaseConnectionForm.tsx",[],["146","147"],"/Users/paulomenezes/repositories/juno/client/src/components/ui/Card.tsx",[],"/Users/paulomenezes/repositories/juno/client/src/hooks/useButtonGroup.tsx",[],["148","149"],"/Users/paulomenezes/repositories/juno/client/src/components/ui/Loading.tsx",[],"/Users/paulomenezes/repositories/juno/client/src/utils/functions.ts",[],"/Users/paulomenezes/repositories/juno/client/src/components/ui/Alert.tsx",[],"/Users/paulomenezes/repositories/juno/client/src/components/ui/Badge.tsx",[],"/Users/paulomenezes/repositories/juno/client/src/pages/UserAdd.tsx",[],"/Users/paulomenezes/repositories/juno/client/src/services/user.service.ts",[],"/Users/paulomenezes/repositories/juno/client/src/components/UsersList.tsx",[],"/Users/paulomenezes/repositories/juno/client/src/pages/UserView.tsx",[],"/Users/paulomenezes/repositories/juno/client/src/contexts/user.context.tsx",[],"/Users/paulomenezes/repositories/juno/client/src/components/DashboardList.tsx",["150","151","152","153","154"],"import { useEffect, useState } from 'react';\nimport { formatRelative } from 'date-fns';\nimport { Link, useParams } from 'react-router-dom';\n\nimport { getAll, remove } from '../services/dashboard.service';\nimport { DatasetInterface, DatasetColumnRole, DashboardInterface } from '@junoapp/common';\nimport { Alert } from './ui/Alert';\nimport { Loading } from './ui/Loading';\nimport { Card } from './ui/Card';\nimport { Badge } from './ui/Badge';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport function DashboardList(): JSX.Element {\n  const [datasets, setDatasets] = useState<DashboardInterface[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const { id } = useParams<{ id: string }>();\n\n  const load = () => {\n    setIsLoading(true);\n\n    getAll(+id).then((datasets) => {\n      setDatasets(datasets);\n      setIsLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    load();\n  }, []);\n\n  const countColumns = (dataset: DashboardInterface, type: DatasetColumnRole): React.ReactNode => {\n    const count = dataset.userDatasets[0].columns.filter(\n      (column) => column.role === type && !column.removed\n    ).length;\n\n    if (count > 0) {\n      return (\n        <Badge>\n          {count} {type.toLowerCase()} column{count > 1 ? 's' : ''}\n        </Badge>\n      );\n    }\n\n    return null;\n  };\n\n  const onDeleteHandler = async (id: number) => {\n    setIsLoading(true);\n    await remove(id);\n    load();\n  };\n\n  return (\n    <div className=\"relative flex flex-wrap -mx-4 min-h\">\n      <Loading loading={isLoading} />\n\n      {!isLoading && datasets.length === 0 && (\n        <Alert\n          title=\"No dataset loaded\"\n          message=\"Upload a CSV file or connect with a database.\"\n          className=\"mx-4\"\n        />\n      )}\n\n      {!isLoading &&\n        datasets.length > 0 &&\n        datasets.map((dashboard: DashboardInterface) => (\n          <div key={dashboard.id} className=\"w-1/3 px-4 mb-4\">\n            <Card title={dashboard.name}>\n              <div className=\"flex flex-col items-start\">\n                <Badge>CSV</Badge>\n                {countColumns(dashboard, DatasetColumnRole.MEASURE)}\n                {countColumns(dashboard, DatasetColumnRole.DIMENSION)}\n                <span className=\"text-gray-600 text-xs mb-2\">\n                  Updated {formatRelative(new Date(dashboard.updatedDate), new Date())}\n                  <br />\n                  Created {formatRelative(new Date(dashboard.createdDate), new Date())}\n                </span>\n              </div>\n              <div className=\"flex\">\n                <Link\n                  to={`/dashboard/view/${dashboard.id}`}\n                  className=\"button button-primary button-small mr-2\"\n                >\n                  <FontAwesomeIcon icon=\"eye\" />\n                  View\n                </Link>\n                <Link\n                  to={`/dashboard/${dashboard.id}/edit`}\n                  className=\"button button-primary button-small mr-2\"\n                >\n                  <FontAwesomeIcon icon=\"pencil-alt\" />\n                  Edit\n                </Link>\n                {/* <button\n                  type=\"button\"\n                  className=\"button button-danger button-small\"\n                  onClick={() => onDeleteHandler(dataset.id)}\n                >\n                  <FontAwesomeIcon icon=\"trash\" />\n                  Delete\n                </button> */}\n              </div>\n            </Card>\n          </div>\n        ))}\n    </div>\n  );\n}\n","/Users/paulomenezes/repositories/juno/client/src/services/dashboard.service.ts",[],"/Users/paulomenezes/repositories/juno/client/src/services/dashboard-recommendation.service.ts",[],"/Users/paulomenezes/repositories/juno/client/src/charts/StackedHorizontalBarChart.tsx",[],"/Users/paulomenezes/repositories/juno/client/src/charts/MultipleLineChart.tsx",[],"/Users/paulomenezes/repositories/juno/client/src/components/Header.tsx",[],"/Users/paulomenezes/repositories/juno/client/src/charts/Heatmap.tsx",[],{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":60,"column":11,"nodeType":"161","messageId":"162","endLine":60,"endColumn":25},{"ruleId":"163","severity":1,"message":"160","line":60,"column":11,"nodeType":"161","messageId":"162","endLine":60,"endColumn":25},{"ruleId":"159","severity":1,"message":"164","line":6,"column":47,"nodeType":"161","messageId":"162","endLine":6,"endColumn":65},{"ruleId":"163","severity":1,"message":"164","line":6,"column":47,"nodeType":"161","messageId":"162","endLine":6,"endColumn":65},{"ruleId":"159","severity":1,"message":"165","line":17,"column":11,"nodeType":"161","messageId":"162","endLine":17,"endColumn":13},{"ruleId":"163","severity":1,"message":"165","line":17,"column":11,"nodeType":"161","messageId":"162","endLine":17,"endColumn":13},{"ruleId":"159","severity":1,"message":"166","line":46,"column":9,"nodeType":"161","messageId":"162","endLine":46,"endColumn":24},{"ruleId":"163","severity":1,"message":"166","line":46,"column":9,"nodeType":"161","messageId":"162","endLine":46,"endColumn":24},{"ruleId":"155","replacedBy":"167"},{"ruleId":"157","replacedBy":"168"},{"ruleId":"155","replacedBy":"169"},{"ruleId":"157","replacedBy":"170"},{"ruleId":"159","severity":1,"message":"171","line":6,"column":10,"nodeType":"161","messageId":"162","endLine":6,"endColumn":26},{"ruleId":"163","severity":1,"message":"171","line":6,"column":10,"nodeType":"161","messageId":"162","endLine":6,"endColumn":26},{"ruleId":"172","severity":1,"message":"173","line":30,"column":6,"nodeType":"174","endLine":30,"endColumn":8,"suggestions":"175"},{"ruleId":"159","severity":1,"message":"166","line":48,"column":9,"nodeType":"161","messageId":"162","endLine":48,"endColumn":24},{"ruleId":"163","severity":1,"message":"166","line":48,"column":9,"nodeType":"161","messageId":"162","endLine":48,"endColumn":24},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],"no-unused-vars","'lineGenerator2' is assigned a value but never used.","Identifier","unusedVar","@typescript-eslint/no-unused-vars","'DashboardInterface' is defined but never used.","'id' is assigned a value but never used.","'onDeleteHandler' is assigned a value but never used.",["176"],["177"],["176"],["177"],"'DatasetInterface' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'load'. Either include it or remove the dependency array.","ArrayExpression",["178"],"no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},"Update the dependencies array to be: [load]",{"range":"181","text":"182"},[918,920],"[load]"]